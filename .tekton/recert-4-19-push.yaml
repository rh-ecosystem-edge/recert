apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/nudge_renovate_config_map: namespace-wide-nudging-renovate-config
    build.appstudio.openshift.io/repo: https://github.com/rh-ecosystem-edge/recert?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: "event == \"push\" && \ntarget_branch
      == \"release-4.19\" && \n(\n  '.tekton/build-pipeline.yaml'.pathChanged() ||\n
      \ 'etcddump/***'.pathChanged() ||\n  'hack/***'.pathChanged() ||\n  'ouger/***'.pathChanged()
      ||\n  'src/***'.pathChanged() ||\n  'vendor/***'.pathChanged() ||\n  'build.rs'.pathChanged()
      ||\n  'Cargo.lock'.pathChanged() ||\n  'Cargo.toml'.pathChanged() ||\n  'ownership.sh'.pathChanged()
      ||\n  'reproto'.pathChanged() ||\n  'run_seed'.pathChanged() ||\n  'vendor.sh'.pathChanged()
      ||\n  '.tekton/recert-4-19-push.yaml'.pathChanged() ||\n  '.konflux/Dockerfile'.pathChanged()
      || \n  '.konflux/lock-build/***'.pathChanged() ||\n  '.konflux/lock-runtime/***'.pathChanged()\n)\n"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: lifecycle-agent-4-19
    appstudio.openshift.io/component: recert-4-19
    pipelines.appstudio.openshift.io/type: build
  name: recert-4-19-on-push
  namespace: telco-5g-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/telco-5g-tenant/recert-4-19:{{revision}}
  - name: build-platforms
    value:
    - linux/x86_64
  - name: dockerfile
    value: .konflux/Dockerfile
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: '[{"type": "rpm", "path": ".konflux/lock-build"}, {"type": "rpm", "path":
      ".konflux/lock-runtime"}]'
  - name: dev-package-managers
    value: "true"
  - name: build-source-image
    value: "true"
  pipelineRef:
    name: build-pipeline
  taskRunTemplate:
    serviceAccountName: build-pipeline-recert-4-19
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
